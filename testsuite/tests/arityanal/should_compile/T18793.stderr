
==================== Tidy Core ====================
Result size of Tidy Core = {terms: 81, types: 74, coercions: 0, joins: 0/0}

-- RHS size: {terms: 20, types: 13, coercions: 0, joins: 0/0}
T18793.$wstuff [InlPrag=NOINLINE] :: Int -> (# Int, [Int] #)
[GblId, Arity=1, Str=<L>, Unf=OtherCon []]
T18793.$wstuff = \ (i :: Int) -> (# i, GHC.Types.: @Int (case i of { GHC.Types.I# x -> GHC.Types.I# (GHC.Prim.+# x 1#) }) (GHC.Types.: @Int (case i of { GHC.Types.I# x -> GHC.Types.I# (GHC.Prim.+# x 2#) }) (GHC.Types.[] @Int)) #)

-- RHS size: {terms: 8, types: 11, coercions: 0, joins: 0/0}
stuff [InlPrag=[final]] :: Int -> [Int]
[GblId,
 Arity=1,
 Str=<L>,
 Cpr=2,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (i [Occ=Once1] :: Int) -> case T18793.$wstuff i of { (# ww [Occ=Once1], ww1 [Occ=Once1] #) -> GHC.Types.: @Int ww ww1 }}]
stuff = \ (i :: Int) -> case T18793.$wstuff i of { (# ww, ww1 #) -> GHC.Types.: @Int ww ww1 }

Rec {
-- RHS size: {terms: 23, types: 11, coercions: 0, joins: 0/0}
T18793.$wgo1 [InlPrag=[2], Occ=LoopBreaker] :: [Int] -> GHC.Prim.Int# -> GHC.Prim.Int#
[GblId, Arity=2, Str=<1L><L>, Unf=OtherCon []]
T18793.$wgo1
  = \ (ds :: [Int]) (ww :: GHC.Prim.Int#) ->
      case ds of {
        [] -> ww;
        : y ys ->
          case y of { GHC.Types.I# x ->
          case GHC.Prim.># x 42# of {
            __DEFAULT -> T18793.$wgo1 ys ww;
            1# -> T18793.$wgo1 ys (GHC.Prim.negateInt# ww)
          }
          }
      }
end Rec }

-- RHS size: {terms: 12, types: 6, coercions: 0, joins: 0/0}
T18793.f_go1 [InlPrag=[2]] :: [Int] -> Int -> Int
[GblId,
 Arity=2,
 Str=<1L><1!L>,
 Cpr=1,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds [Occ=Once1] :: [Int]) (eta [Occ=Once1!] :: Int) -> case eta of { GHC.Types.I# ww [Occ=Once1] -> case T18793.$wgo1 ds ww of ww1 [Occ=Once1] { __DEFAULT -> GHC.Types.I# ww1 } }}]
T18793.f_go1 = \ (ds :: [Int]) (eta :: Int) -> case eta of { GHC.Types.I# ww -> case T18793.$wgo1 ds ww of ww1 { __DEFAULT -> GHC.Types.I# ww1 } }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
T18793.f2 :: Int
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
T18793.f2 = GHC.Types.I# 1#

-- RHS size: {terms: 7, types: 10, coercions: 0, joins: 0/0}
T18793.f1 :: [Int]
[GblId, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False, WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 40 10}]
T18793.f1 = case T18793.$wstuff T18793.f2 of { (# ww, ww1 #) -> GHC.Types.: @Int ww ww1 }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
f :: Int -> Int
[GblId, Arity=1, Str=<1!L>, Cpr=1, Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True, WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 60}]
f = T18793.f_go1 T18793.f1



